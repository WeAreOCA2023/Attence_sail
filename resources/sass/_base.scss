@use "config/fonts" as f;
@use "config/variables" as v;
@use "mixin" as m;
@use "responsive" as r;

html {
    font-size: 62.5%;
    transition-duration: 1s;
    height: -webkit-fill-available;
}

body {
    width: 100%;
    user-select: none;
    min-height: 100vh;
    min-height: -webkit-fill-available;
}

.header{
    height: 7vh;
    background-color: var(--bs-main-color);
    .logo {
        width: 65px;
        height: 65px;
        background-image: var(--bs-logo);
    }
    .user {
        padding: 8px;
        margin: 0 1vw 0 auto;
        i {
            font-size: 40px;
            border-radius: 50%;
            background-color: #535353;
        }

        .flex-flow {
            flex-flow: column;
        }

        .color {
            color: #A2A3A2;
        }

        .padding {
            margin-right: 5%;
        }
        span{
            color: var(--bs-anti-main-color);
            @include m.fz(30);
        }
        .dropdown-toggle { outline: 0; }

    }
}
main {
    position: relative;
    max-height: 100vh;
    overflow-x: auto;
    overflow-y: hidden;
    background-color: var(--bs-second-color);

}

// app
#app {

    .py-4 {
        height: calc(100vh - 56px);
    }
}

#auth {
    height: 100vh;
    background-color: var(--bs-anti-main-color);
}

.title{
    position: relative;


    h1{
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 0;
        margin: 0;
        font-size: 5rem;
        color: #fff;
        font-family: 'Kaushan Script', cursive;
    }

    .logo {
        position: absolute;
        top: 30%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 0;
        margin: 0;
    }
}

.mainColor {
    color: v.$mainColor !important;
}


.login{
    .logo{
        margin: 5vh 0 5vh 0;
    }
    .loginBox{
        background-color: v.$darkGray;
        width: 21vw;
        height: 45vh;
        border-radius: v.$round-15;
        h1{
            color: var(--bs-main-color);
            @include m.fz(36);
        }
        .loginBoxInner{
            height: 35vh;
            width: 16vw;
            form{
                height: 27vh;
            }
            .emailBox{
                label{
                    color: var(--bs-main-color);
                    @include m.fz(15);
                }
                .emailInput{
                    input{
                        width: 16vw;
                        height: 2vw;
                        border-radius: v.$round-15;
                        background-color: v.$darkGray;
                        border: 1px solid var(--bs-main-color);
                        color: var(--bs-main-color);
                        @include m.fz(15);
                    }
                    input:focus{
                        border-color: v.$red;
                    }
                }
            }
            .passwordBox{
                label{
                    color: var(--bs-main-color);
                    @include m.fz(15);
                }
                .passwordInput{
                    input{
                        width: 16vw;
                        height: 2vw;
                        border-radius: v.$round-15;
                        background-color: v.$darkGray;
                        border: 1px solid var(--bs-main-color);
                        color: var(--bs-main-color);
                        @include m.fz(15);
                    }
                    input:focus{
                        border-color: v.$red;
                    }
                }
            }
            .keepLogin{
                input{
                    height: 1.6vh;
                    width: 0.8vw;
                    margin-right: 7px;
                }
                label{
                    color: var(--bs-main-color);
                    background-color: v.$darkGray;
                    @include m.fz(15);
                }
                input[type="checkbox"]:checked{
                    background-color: v.$red; /* チェックされたときの背景色を緑に変更 */
                }
            }
            .loginButton{
                button{
                    color: var(--bs-main-color);
                    @include m.fz(20);
                    width: 16vw;
                    height: 2vw;
                    background-color: v.$red;
                    border-radius: v.$round-15;
                    border:none;
                }
            }
            .forgotPass{
                a{
                    color: var(--bs-main-color);
                    @include m.fz(18);
                }

            }
        }
    }
}

// register
.register {
    .logo{
        margin: 3vh 0 3vh 0;
    }
    .registerBox {
        background-color: v.$darkGray;
        width: 25vw;
        height: 70vh;
        border-radius: v.$round-15;
        h1 {
            color: var(--bs-main-color);
            @include m.fz(36);
        }
        .registerBoxInner {
            form{
                input{
                    width: 16vw;
                    height: 2vw;
                    border-radius: v.$round-15;
                    background-color: v.$darkGray;
                    border: 1px solid var(--bs-main-color);
                    color: var(--bs-main-color);
                    @include m.fz(15);
                }
                label{
                    color: var(--bs-main-color);
                    @include m.fz(15);
                }
            }
            .RegisterButton {
                margin-top: 2vh;
                button {
                    color: var(--bs-main-color);
                    @include m.fz(20);
                    width: 16vw;
                    height: 2vw;
                    background-color: v.$green;
                    border-radius: v.$round-15;
                }
            }
        }
    }
}

//registerBoss
.registerBoss{
    .logo{
        margin: 1.5vh 0 1.5vh 0;
    }
    .registerBox {
        background-color: v.$darkGray;
        width: 25vw;
        height: 85vh;
        border-radius: v.$round-15;
        h1 {
            color: var(--bs-main-color);
            @include m.fz(36);
        }
        .registerBoxInner {
            form{
                input{
                    width: 16vw;
                    height: 2vw;
                    border-radius: v.$round-15;
                    background-color: v.$darkGray;
                    border: 1px solid var(--bs-main-color);
                    color: var(--bs-main-color);
                    @include m.fz(15);
                }
                label{
                    color: var(--bs-main-color);
                    @include m.fz(15);
                }
            }
            .RegisterButton {
                margin-top: 2vh;
                button {
                    color: var(--bs-main-color);
                    @include m.fz(20);
                    width: 16vw;
                    height: 2vw;
                    background-color: v.$green;
                    border-radius: v.$round-15;
                }
            }
        }
    }
}


// index

.sidebar {
    background-color: var(--bs-main-color);
    a{
        color: var(--bs-anti-main-color);
        @include m.fz(18);
    }
    .selected{
        font-weight: bold;
    }
    a:hover{
        color: var(--bs-anti-main-color);
        background-color: rgb(15, 20, 25, 0.1)
    }
}

.home{
    gap: 0 2vw;
    .stopWatch {
        width: 37vw;
        border-radius: v.$round-40;
        background-color: var(--bs-main-color);
        box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        h1{
            margin: 10% 0 10% 0;
            @include m.fz(50);
            color: v.$black;
            background-color: #E8E8E8;
            width: 50%;
            height: 8%;
            border-radius: v.$round-10;
            border: 5px solid v.$red;
        }
        .start {
            border: 5px solid #3CB043;
        }
        .break {
            border: 5px solid #DF943B;
        }
        h2{
            margin: 0 0 10% 0;
            @include m.fz(40);
        }
        .circle{
            width: 400px;
            height: 400px;
            margin: 0 0 15% 0;
        }
        #timer{
            @include m.fz(30);
            letter-spacing: 5px;
        }
        .button{
            #btn{
                display: flex;
                list-style:none;
                padding: 0;

                .toggleButton{
                    width: 259px;
                    height: 123px;
                    background-image: var(--bs-start);
                }
                .resetButton{
                    width: 259px;
                    height: 123px;
                    background-image: var(--bs-stop);
                }
                .pauseButton{
                    width: 259px;
                    height: 123px;
                    background-image: var(--bs-pause);
                }
                .restartButton{
                    width: 259px;
                    height: 123px;
                    background-image: var(--bs-restart);
                }
            }
            .btn-item{
                padding: 5px;
                cursor: pointer;
                user-select: none;
            }
            .btn-item:hover,.disabled{
                opacity: 0.2;
                transition: 0.2s;
            }
            #switch{
                width: 170px;
                height: 170px;
                background: url(public/img/start.svg) no-repeat;
                background-size: 100% 100%;
                cursor: pointer;
            }
        }
        #progressPath {
            stroke-dasharray: 1193.8055419921875;
        }
    }
    .infoBox{
        width: 45vw;
        height: 100%;
        .taskList{
            height: 28vh;
            background-color: var(--bs-main-color);
            padding-left: 2vw;
            border-radius: v.$round-40;
            box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
            .taskListTitle{
                margin-left: 1.5vw;
                h3{
                    margin-left: 1vw;
                    @include m.fz(35)
                }
            }
            .taskListTasks{
                margin-left: 1.5vw;
                @include m.fz(25)
            }
            .taskListButton{
                button{
                    @include m.fz(15);
                    background-color: v.$black;
                    color: v.$white;
                    width: 8vw;
                    height: 4vh;
                }
            }
        }
        .extraWorkList{
            height: 28vh;
            background-color: var(--bs-main-color);
            border-radius: v.$round-40;
            box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        }
        .workHourList{
            height: 28vh;
            background-color: var(--bs-main-color);
            border-radius: v.$round-40;
            box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
            .weekWorkTime{
                border-right: 1px solid var(--bs-anti-main-color);
                progress {
                    width: 10vw;
                    height: 1.5vh;
                    border-radius: v.$round-15;
                }
                // 角を丸くする
                progress::-webkit-progress-bar {
                    border-radius: v.$round-15;
                }

                progress::-webkit-progress-value {
                    border-radius: v.$round-15;
                }
                progress::-moz-progress-bar {
                    border-radius: v.$round-15;
                }
                progress::-ms-fill {
                    border-radius: v.$round-15;
                }
                // 色を変更する
                progress {
                    appearance: none;
                }
                ::-webkit-progress-bar {
                    background-color: gray;
                }
                ::-webkit-progress-value {
                    background-color: v.$darkGray;
                }
            }
            .monthWorkTime{
                progress {
                    width: 10vw;
                    height: 1.5vh;
                    border-radius: v.$round-15;
                }
                // 角を丸くする
                progress::-webkit-progress-bar {
                    border-radius: v.$round-15;
                }

                progress::-webkit-progress-value {
                    border-radius: v.$round-15;
                }
                progress::-moz-progress-bar {
                    border-radius: v.$round-15;
                }
                progress::-ms-fill {
                    border-radius: v.$round-15;
                }
                // 色を変更する
                progress {
                    appearance: none;
                }
                ::-webkit-progress-bar {
                    background-color: gray;
                }
                ::-webkit-progress-value {
                    background-color: v.$darkGray;
                }
            }
        }
        .extraWorkList{
            height: 28vh;
            border-radius: v.$round-40;
            box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
            .weekOverTime{
                border-right: 1px solid var(--bs-anti-main-color);
                progress {
                    width: 10vw;
                    height: 1.5vh;
                    border-radius: v.$round-15;
                }
                // 角を丸くする
                progress::-webkit-progress-bar {
                    border-radius: v.$round-15;
                }

                progress::-webkit-progress-value {
                    border-radius: v.$round-15;
                }
                progress::-moz-progress-bar {
                    border-radius: v.$round-15;
                }
                progress::-ms-fill {
                    border-radius: v.$round-15;
                }
                // 色を変更する
                progress {
                    appearance: none;
                }
                ::-webkit-progress-bar {
                    background-color: gray;
                }
                ::-webkit-progress-value {
                    background-color: v.$darkGray;
                }
            }
            .monthOverTime{
                progress {
                    width: 10vw;
                    height: 1.5vh;
                    border-radius: v.$round-15;
                }
                // 角を丸くする
                progress::-webkit-progress-bar {
                    border-radius: v.$round-15;
                }

                progress::-webkit-progress-value {
                    border-radius: v.$round-15;
                }
                progress::-moz-progress-bar {
                    border-radius: v.$round-15;
                }
                progress::-ms-fill {
                    border-radius: v.$round-15;
                }
                // 色を変更する
                progress {
                    appearance: none;
                }
                ::-webkit-progress-bar {
                    background-color: gray;
                }
                ::-webkit-progress-value {
                    background-color: v.$darkGray;
                }
            }
        }
    }
}

// department-management
.departmentManagement{
    gap: 0 2vw;
    .allDepartmentsBox{
        width: 41vw;
        border-radius: v.$round-40;
        background-color: var(--bs-main-color);
        box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        .error{
            color: v.$red;
            font-weight: map-get(v.$font-weight, 1);
            @include m.fz(18);
        }
        .title{
            width: 6.3vw;
            margin-top: 5px;
            margin-left: 13px;
            h2{
                @include m.fz(35);
                margin-left: 8px;
                vertical-align: middle;
            }
        }
        .edit-delete{
            button{
                border: none;
                background: none;
            }
            .deleteBtn{
                cursor: pointer;
            }
        }

        .table{
            .editing-row {
                background-color: gray;
            }
            th, tr{
                @include m.fz(22);
                padding: 1%;
            }
            td{
                .editing{
                    width: 4vw;
                    padding: 6px;
                    color: var(--bs-anti-main-color);
                    background-color: #FFC076;
                    border-radius: v.$round-10;
                    h3{
                        font-weight: map-get(v.$font-weight, 1);
                    }
                }
            }
        }
        .pagination-link{
            .pagination{
                .page-link {
                    background-color: var(--bs-anti-main-color);
                    color: var(--bs-main-color);
                }
            }
        }
    }
    .addDepartmentsBox{
        width: 41vw;
        border-radius: v.$round-40;
        background-color: var(--bs-main-color);
        box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        form{
            height: 60vh;
        }
        .success{
            color: v.$green;
            font-weight: map-get(v.$font-weight, 1);
            @include m.fz(18);
        }
        .error{
            color: v.$red;
            font-weight: map-get(v.$font-weight, 1);
            @include m.fz(18);
        }
        .department, .responsible{
            width: fit-content;
            height: 10vh;
            label{
                @include m.fz(20);
            }
            input{
                @include m.fz(25);
                border: none;
                outline: none;
                background-color: var(--bs-main-color);
                border-bottom: 1px solid var(--bs-anti-main-color);
                padding: 6px;
            }
            .responsibleInput{
                ul{
                    max-height: 12vh;
                    overflow-y: scroll;
                    li{
                        width: 100%;
                        @include m.fz(25);
                        background-color: var(--bs-main-color);
                        color: var(--bs-anti-main-color);
                    }
                    li:hover{
                        cursor: pointer;
                        transition: .5s;
                        background-color: var(--bs-anti-main-color);
                        color: var(--bs-main-color);
                    }
                }
            }
        }
        .BtnGroup{
            gap: 3vw;
            .createButton, .cancelButton{
                button{
                    width: 10vw;
                    @include m.fz(30);
                    border: none;
                    outline: none;
                    color: var(--bs-main-color);
                    padding: 8px;
                    border-radius: v.$round-10;
                }
            }
            .cancelButton{
                button{
                    background-color: v.$red;
                }
            }
            .createButton{
                button{
                    background-color: v.$green;
                }
            }
        }
        .createButton{
            button{
                width: 10vw;
                @include m.fz(30);
                border: none;
                outline: none;
                color: var(--bs-main-color);
                background-color: v.$green;
                padding: 8px;
                border-radius: v.$round-10;
            }
        }
    }
}

// position-management
.positionManagement{
    gap: 0 2vw;
    .allPositionsBox{
        width: 41vw;
        border-radius: v.$round-40;
        background-color: var(--bs-main-color);
        box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        .error{
            color: v.$red;
            font-weight: map-get(v.$font-weight, 1);
            @include m.fz(18);
        }
        .title{
            width: 6.3vw;
            margin-top: 5px;
            margin-left: 13px;
            h2{
                @include m.fz(35);
                margin-left: 8px;
                vertical-align: middle;
            }
            img{
                width: 2vw;
            }
        }

        .positionOuterBox{
            gap: 1.5vh;
            .pagination-link{
                .pagination{
                    .page-link {
                        background-color: var(--bs-anti-main-color);
                        color: var(--bs-main-color);
                    }
                }
            }
            .positionInnerBox{
                width: 80%;
                height: 4vh;
                background-color: var(--bs-main-color)Gray;
                border-radius: v.$round-10;
                box-shadow: 3px 3px 3px rgba(15, 20, 25, 0.25);
                h3{
                    @include m.fz(20);
                }
                .drag img{
                    width: 2.2vw;
                }
                .content{
                    width: 40vw;
                    button{
                        border: none;
                        background: none;
                    }
                }
                .editing{
                    width: 4vw;
                    padding: 6px;
                    color: var(--bs-anti-main-color);
                    background-color: #FFC076;
                    border-radius: v.$round-10;
                    h3{
                        font-weight: map-get(v.$font-weight, 1);
                    }
                }
            }
        }

    }
    .addPositionsBox{
        width: 41vw;
        border-radius: v.$round-40;
        background-color: var(--bs-main-color);
        box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        form{
            height: 60vh;
        }
        .success{
            color: v.$green;
            font-weight: map-get(v.$font-weight, 1);
            @include m.fz(18);
        }
        .error{
            color: v.$red;
            font-weight: map-get(v.$font-weight, 1);
            @include m.fz(18);
        }
        .position, .rank{
            width: fit-content;
            margin: 0 auto;
            height: 10vh;
            label{
                @include m.fz(20);
            }
            input{
                @include m.fz(25);
                border: none;
                outline: none;
                background-color: var(--bs-main-color);
                border-bottom: 1px solid var(--bs-anti-main-color);
                padding: 8px;
            }
        }
        .createButton{
            button{
                width: 10vw;
                padding: 8px;
                @include m.fz(30);
                border: none;
                outline: none;
                color: var(--bs-main-color);
                background-color: v.$green;
                padding: 8px;
                border-radius: v.$round-10;
            }
        }
        .BtnGroup{
            gap: 3vw;
            .createButton, .cancelButton{
                button{
                    width: 10vw;
                    @include m.fz(30);
                    border: none;
                    outline: none;
                    color: var(--bs-main-color);
                    padding: 8px;
                    border-radius: v.$round-10;
                }
            }
            .cancelButton{
                button{
                    background-color: v.$red;
                }
            }
            .createButton{
                button{
                    background-color: v.$green;
                }
            }
        }
    }
}

// profile
.profile{
    gap: 0.2vh;
    .upperBox{
        width: 84vw;
        height: 43vh;
        border-radius: v.$round-40;
        background-color: var(--bs-main-color);
        box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        .upperLeftBox{
            width: 26%;
            height: 100%;
            border-right: 1px solid black;
            h3{
                @include m.fz(40);
                font-weight: map-get(v.$font-weight, 1);
            }
            img{
                width: 8vw;
            }
            progress {
                width: 10vw;
                height: 1.5vh;
                border-radius: v.$round-15;
            }
            // 角を丸くする
            progress::-webkit-progress-bar {
                border-radius: v.$round-15;
            }

            progress::-webkit-progress-value {
                border-radius: v.$round-15;
            }
            progress::-moz-progress-bar {
                border-radius: v.$round-15;
            }
            progress::-ms-fill {
                border-radius: v.$round-15;
            }
            // 色を変更する
            progress {
                appearance: none;
            }
            ::-webkit-progress-bar {
                background-color: gray;
            }
            ::-webkit-progress-value {
                background-color: v.$darkGray;
            }
            .creditScore{
                label{
                    @include m.fz(20);
                }
            }
        }
        .upperRightBox{
            width: 74%;
            height: 100%;
            img{
                width: 1.7vw;
            }
            h2{
                @include m.fz(25);
            }
            .unset{
                padding: 5px;
                color: v.$darkRed;
                background-color: v.$red2;
                border-radius: v.$round-10;
                font-weight: map-get(v.$font-weight, 1);
            }
            .upperRightTopBox{
                width: 100%;
                height: 33.33%;
                border-bottom: 1px solid black;
            }
            .upperRightMiddleBox{
                width: 100%;
                height: 33.33%;
                border-bottom: 1px solid black;
            }
            .upperRightBottomBox{
                width: 100%;
                height: 33.33%;
            }

        }
    }
    .lowerBox{
        gap: 3vw;
        img{
            width: 2vw;
        }
        .lawBox, .companyBox, .accountBox{
            gap: 0.2vw;
            width: 25vw;
            height: 45vh;
            background-color: var(--bs-main-color);
            border-radius: v.$round-40;
            h2{
                @include m.fz(40);
            }
            form{
                gap: 3vh;
            }
            label{
                @include m.fz(20);
            }
            input, select{
                height: 3vh;
                width: 10vw;
                @include m.fz(20);
            }
        }
        .lawBox{
            form{
                gap: 5vh;
            }
        }
        .accountOuterBox{
            .accountBox
            form{
                gap: 1.3vh;
                button{
                    width: 3vw;
                    @include m.fz(20);
                    border: none;
                    outline: none;
                    color: var(--bs-main-color);
                    background-color: v.$black;
                    padding: 3px;
                    border-radius: v.$round-10;
                }
            }
            .accountInnerBox{
                gap: 1.3vh;
            }
        }
        .agreement36Input{
            width: fit-content;
            margin: 0 auto;
        }
        .form-select{
            width: 5vw;
        }
        .error{
            color: v.$red;
            font-weight: map-get(v.$font-weight, 1);
            @include m.fz(15);
        }
        .saveButton{
            button{
                width: 4.5vw;
                @include m.fz(30);
                border: none;
                outline: none;
                color: var(--bs-main-color);
                background-color: v.$darkGray;
                padding: 3%;
                border-radius: v.$round-10;
            }
        }
    }
}



// user-management
.userManagement{
    gap: 0.2vw;
    .whiteBox{
        max-height: 90vh;
        overflow-y: scroll;
        width: 80vw;
        background-color: var(--bs-main-color);
        border-radius: v.$round-40;
        box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        .sticky-top{
            background-color: var(--bs-main-color);
        }
        .filter-group{
            gap: 2vw;
            .filter-position, .filter-department, .filter-status, .filter-overwork, .filter-on{
                li + li{
                    border-top: 1px solid var(--bs-anti-main-color);
                }
                a, button{
                    @include m.fz(20);
                }
            }
            .filter-on{
                .btn{
                    background-color: v.$green ;
                    border: none;
                }
            }
            .clear-filter, .filter-unset{
                button{
                    background-color: #6C757D;
                    border: none;
                    color: var(--bs-btn-hover-color);
                    @include m.fz(20);
                }

            }
        }
        .error{
            color: v.$red;
            font-weight: map-get(v.$font-weight, 1);
            @include m.fz(20);
        }
        .success{
            color: v.$green;
            font-weight: map-get(v.$font-weight, 1);
            @include m.fz(20);
        }
        .input-group{
            width: 26vw;
            margin: 1% auto;
            .svg{
                margin-right: 2px;
                font-size: 3rem;
            }
        }
        .filterOptions{
            width: 20vw;
            p{
                padding: 10px;
                font-size: 1.2rem;
                width: 5vw;
                color: var(--bs-main-color);
                background-color: var(--bs-anti-main-color);
                text-align: center;
            }

        }
        .table{
            width: 75vw;
            margin: 20px auto 18px;
            overflow-x: scroll;
            tr, th{
                width: fit-content;
                @include m.fz(22);
                .td-department, .td-position, .td-email, .td-fullName, .th-agreement36, .th-variable_working_hours_system, .th-status, .th-overwork{
                    white-space: nowrap;
                }
                .td-Btn{
                    width: 1vw;
                }
                td{
                    width: fit-content;
                    padding: 10px;
                    .form-select{
                        width: 4vw;
                    }
                    .unset, .status-overwork{
                        padding: 5px;
                        color: rgb(205, 32, 32);
                        background-color: rgb(245, 209, 209);
                        border-radius: v.$round-10;
                        font-weight: map-get(v.$font-weight, 1);
                    }
                    .unaffliated{
                        color: var(--bs-anti-main-color);
                    }
                    .edit-delete{
                        img{
                            width: 2vw;
                        }
                        button{
                            border: none;
                            background: none;
                        }
                    }
                    .status-unoverwork{
                        padding: 5px;
                        color: v.$status-blue;
                        background-color: rgb(205, 215, 237);
                        border-radius: v.$round-10;
                        font-weight: map-get(v.$font-weight, 1);
                    }
                    .status-online{
                        color: v.$status-blue;
                        font-weight: map-get(v.$font-weight, 1);
                    }
                    .status-offline{
                        color: v.$red;
                        font-weight: map-get(v.$font-weight, 1);
                    }
                    .status-break{
                        color: rgb(67, 169, 39);
                        font-weight: map-get(v.$font-weight, 1);
                    }
                    .status-leave{
                        color: rgb(225, 225, 225);
                        font-weight: map-get(v.$font-weight, 1);
                    }
                    .status-offboarding{
                        padding: 5px;
                        // color: rgb(208, 206, 206);
                        // background-color: var(--bs-anti-main-color);
                        // border-radius: v.$round-10;
                        // font-weight: map-get(v.$font-weight, 1);
                        color: var(--bs-anti-main-color);
                        font-weight: map-get(v.$font-weight, 1);
                    }
                    .save-cancel{
                        width: 5.3vw;
                        .saveImg{
                            width: 2.2vw;
                        }
                        .cancelImg{
                            width: 1.5vw;
                        }
                        button{
                            border: none;
                            background: none;
                        }
                    }
                }
            }

        }
        .pagination-link{
            .pagination{
                .page-link {
                    background-color: var(--bs-anti-main-color);
                    color: var(--bs-main-color);
                }
            }
        }
    }
}

.indexPage{
    background-color: black;
    background-image: url("/public/img/bestBG.svg");
    background-size: cover;
    header{
        height: 7.5vh;
        background-color: var(--bs-anti-main-color);
        img{
            height: 80%;
            margin-left: 2vw;
        }
        h1{
            @include m.fz(45);
            color: var(--bs-main-color);
            font-weight: bold;
            margin-left: 0.5vw;
        }
    }
    .main{
        .indexTitle{
            margin-top: 25vh;
            h1{
                font-family: 'Sawarabi Gothic', sans-serif;
                font-weight: bold;
                @include m.fz(90);
                color: var(--bs-main-color);
                width: 100vw;

                span{
                    @include m.fz(120);
                    background: -webkit-linear-gradient(#1F58EA, #EB06FF);
                    -webkit-background-clip: text;//テキストでくり抜く
                    -webkit-text-fill-color: transparent;//テキストの色を透明に
                }

            }
        }
        .buttonList{
            width: 60vw;
            gap: 10vw;
            margin: 0 auto;
            margin-top: 20vh;
            .buttonBox{
                height: 8vh;
                //width: 9vw;
                a{
                    @include m.fz(25);
                    color: var(--bs-main-color);
                    z-index: 99;
                }
            }
            .loginButton{
                display:inline-block;
                width: 10vw;
                //padding: 0 5%;
                position: relative;
            }
            .loginButton:before{
                content: "";
                position: absolute;
                inset: 0;
                border-radius: 20px;
                padding: 5px;
                background: linear-gradient(45deg,#0071F6,#1B1099);
                -webkit-mask: linear-gradient(#fff 0 0) content-box,linear-gradient(#fff 0 0);
                -webkit-mask-composite: xor;
                mask-composite: exclude;
            }

            .registerBossButton{
                display:inline-block;
                padding: 10px;
                position: relative;
            }
            .registerBossButton:before{
                content: "";
                position: absolute;
                inset: 0;
                border-radius: 20px;
                padding: 5px;
                background: linear-gradient(45deg,#600546,#BC099F);
                -webkit-mask: linear-gradient(#fff 0 0) content-box,linear-gradient(#fff 0 0);
                -webkit-mask-composite: xor;
                mask-composite: exclude;
            }
            .registerButton{
                display:inline-block;
                padding: 10px;
                position: relative;
            }
            .registerButton:before{
                content: "";
                position: absolute;
                inset: 0;
                border-radius: 20px;
                padding: 5px;
                background: linear-gradient(45deg,#600546,#BC099F);
                -webkit-mask: linear-gradient(#fff 0 0) content-box,linear-gradient(#fff 0 0);
                -webkit-mask-composite: xor;
                mask-composite: exclude;
            }
        }
    }
}
.myAllTasks{
    gap: 0 2vw;
    .jobList{
        background-color: var(--bs-main-color);
        width: 37vw;
        height: 90vh;
        border-radius: v.$round-40;
        box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        .title{
            margin: 4% 0 0 4%;
            gap: 0 1%;
            .icon{
                background-image: var(--bs-onprogress);
                background-size: contain; /* または contain など、適切な値を指定 */
                background-repeat: no-repeat;
                width: 4%;
            }
            h2{
                margin: 0;
            }
        }
        .plusIcon{
            top: 2%;
            right: 4%;
            width: 8.5%;
            height: 5.2%;
            div{
                background-image: var(--bs-plus);
                background-size: contain; /* または contain など、適切な値を指定 */
                background-repeat: no-repeat;
                width: 100%;
                height: 100%;
            }
        }
        .tasks{
            margin: 4% 0 0 4%;
            .task{
                width: 80%;
                height: 4vh;
                background-color: var(--bs-anti-second-color2);
                border-radius: v.$round-10;
                box-shadow: 3px 3px 3px rgba(15, 20, 25, 0.25);
                color: var(--bs-anti-main-color);
                @include m.fz(16);
                .check{
                    background-image: var(--bs-check);
                    background-size: contain; /* または contain など、適切な値を指定 */
                    background-repeat: no-repeat;
                    width: 4%;
                    margin-left: 3%;
                }
                .checked{
                    background-image: var(--bs-checked);
                    background-size: contain; /* または contain など、適切な値を指定 */
                    background-repeat: no-repeat;
                    width: 4%;
                    margin-left: 3%;
                }
                span{
                    @include m.fz(20);
                    padding-left: 4%;
                }
            }
        }
    }
    .job{
        background-color: var(--bs-main-color);
        width: 45vw;
        height: 90vh;
        border-radius: v.$round-40;
        box-shadow: 10px 10px 10px rgba(15, 20, 25, 0.25);
        .createJob{
            padding: 2% 0 0 2%;
            .title{
                width: 80%;
                height: 10%;
                margin-bottom: 4%;
                input{
                    @include m.fz(30);
                    border: none;
                    outline: none;
                    background-color: var(--bs-main-color);
                    border-bottom: 1px solid var(--bs-anti-main-color);
                    padding: 5% 5%;
                }
            }
            .assign{
                width: 40%;
                span{
                    width: 100%  !important;
                }
            }
            .deadline{
                margin-bottom: 4%;
                span{
                    @include m.fz(20);
                }
                input{
                    @include m.fz(20);
                    border: none;
                    outline: none;
                    background-color: var(--bs-main-color);
                    border-bottom: 1px solid var(--bs-anti-main-color);
                    padding: 1% 2%;
                }
            }
            .description{
                width: 90%;
                height: 60%;
                span{
                    @include m.fz(20);
                }
                textarea{
                    height: 90%;
                    @include m.fz(15);
                    background-color: var(--bs-main-color);
                    border-radius: v.$round-10;
                    border-color: var(--bs-description);
                    margin-top: 1%;
                }
            }
            .submit{
                button{
                    border: none;
                    background-color: var(--bs-main-color);
                }
            }
        }
        .taskDetail{
            .taskMain{
                width: 75%;
                padding-left: 3%;
            }
            h2{
                margin: 3% 0 0 0;
                @include m.fz(30);
            }
            .taskSidebar{
                width: 25%;
                background: rgba(15, 20, 25, 0.1);
                border-radius: 0 40px 40px 0;
            }
        }
    }
}
.registerBoss{

}
